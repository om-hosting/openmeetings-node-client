/* tslint:disable */
/* eslint-disable */
/**
 * Apache OpenMeetings API
 * Integration API enables to connect to an OpenMeetings instance, eg for generating users, create links to directly access conference rooms.<br/><br/>         <b>It is mainly designed for Server2Server integration, for example to integrate into your website, CMS or 3rd party application</b><br/><br/>         For examples how to use the Rest API see <a href=\"https://openmeetings.apache.org/RestAPISample.html\" target=\"_BLANK\">https://openmeetings.apache.org/RestAPISample.html</a>.<br/><br/>         Community contributed modules for using this API include for example:         <ul>          <li><a href=\"https://openmeetings.apache.org/RestAPISample.html#how-to-integrate-using-nodejs\" target=\"_BLANK\"> Node.js module for using API</a></li>         </ul>         Other community plugins using this API for Moodle, SugarCRM, Drupal, Joomla can be found in the Configuration>Plugins section at <a href=\"https://openmeetings.apache.org\" target=\"_BLANK\">https://openmeetings.apache.org</a>
 *
 * OpenAPI spec version: 7.0.0-SNAPSHOT
 * Contact: dev@openmeetings.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
/**
 * 
 * @export
 * @interface UserDTO
 */
export interface UserDTO {
    /**
     * 
     * @type {Address}
     * @memberof UserDTO
     */
    address?: any;
    /**
     * 
     * @type {string}
     * @memberof UserDTO
     */
    externalId?: any;
    /**
     * 
     * @type {string}
     * @memberof UserDTO
     */
    externalType?: any;
    /**
     * 
     * @type {string}
     * @memberof UserDTO
     */
    firstname?: any;
    /**
     * 
     * @type {number}
     * @memberof UserDTO
     */
    id?: any;
    /**
     * 
     * @type {number}
     * @memberof UserDTO
     */
    languageId?: any;
    /**
     * 
     * @type {string}
     * @memberof UserDTO
     */
    lastname?: any;
    /**
     * 
     * @type {string}
     * @memberof UserDTO
     */
    login?: any;
    /**
     * 
     * @type {string}
     * @memberof UserDTO
     */
    password?: any;
    /**
     * 
     * @type {string}
     * @memberof UserDTO
     */
    pictureUri?: any;
    /**
     * 
     * @type {Array&lt;string&gt;}
     * @memberof UserDTO
     */
    rights?: Array<UserDTORightsEnum>;
    /**
     * 
     * @type {string}
     * @memberof UserDTO
     */
    timeZoneId?: any;
    /**
     * 
     * @type {string}
     * @memberof UserDTO
     */
    type?: UserDTOTypeEnum;
}

/**
    * @export
    * @enum {string}
    */
export enum UserDTORightsEnum {
    ADMIN = 'ADMIN',
    GROUPADMIN = 'GROUP_ADMIN',
    ADMINCONFIG = 'ADMIN_CONFIG',
    ADMINCONNECTIONS = 'ADMIN_CONNECTIONS',
    ADMINBACKUP = 'ADMIN_BACKUP',
    ADMINLABEL = 'ADMIN_LABEL',
    ROOM = 'ROOM',
    DASHBOARD = 'DASHBOARD',
    LOGIN = 'LOGIN',
    SOAP = 'SOAP'
}
/**
    * @export
    * @enum {string}
    */
export enum UserDTOTypeEnum {
    USER = 'USER',
    LDAP = 'LDAP',
    OAUTH = 'OAUTH',
    EXTERNAL = 'EXTERNAL',
    CONTACT = 'CONTACT'
}

